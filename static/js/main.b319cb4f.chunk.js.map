{"version":3,"sources":["components/ThinFilmFresnelMap.js","components/use-render-target.js","components/data.js","components/use-layers.js","components/state.js","components/section.js","components/use-slerp.js","components/header.js","App.js","serviceWorker.js","index.js"],"names":["ThinFilmFresnelMap","filmThickness","refractiveIndexFilm","refractiveIndexBase","size","this","_filmThickness","_refractiveIndexFilm","_refractiveIndexBase","_size","_data","Uint8Array","_updateData","THREE","call","generateMipmaps","needsUpdate","prototype","Object","create","get","set","value","updateSettings","_fresnelRefl","refractiveIndex1","refractiveIndex2","cos1","cos2","R","phi","sin1Sqr","refrRatio","x","y","sqrRefrRatio","Math","atan","sqrt","r_p","r_s","PI","xFit_1931","lambda","t1","t2","t3","exp","yFit_1931","zFit_1931","data","phi12","phi21","phi23","R12","T12","R23","R_bi","T_tot","R_star","R_bi_sqr","R_12_star","R_star_t_tot","refrRatioSqr","refrRatioSqrBase","i","cosThetaI","cosThetaT","cosThetaT2","pathDiff","pathDiff2PI","z","totX","totY","totZ","j","waveLen","deltaPhase","cosPhiX","cos","cosPhiY","v","wx","wy","wz","r","g","b","clamp","k","floor","useRenderTarget","settings","renderTarget","useMemo","renderTargetSettings","format","cubeCamera","useRef","useFrame","gl","scene","current","update","mirrorsData","mirrors","args","position","rotation","useLayers","layers","ref","useEffect","disableAll","sort","forEach","layer","enable","state","sections","pages","zoom","top","createRef","offsetContext","createContext","Section","children","offset","factor","props","useThree","viewport","useContext","viewportWidth","width","viewportHeight","height","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth","sectionHeight","aspect","useSection","parentOffset","undefined","curY","curTop","lerp","Provider","useSlerp","group","rotationEuler","rotationQuaternion","mouse","setFromEuler","quaternion","slerp","Header","className","Loader","useProgress","active","progress","useTransition","from","opacity","leave","transition","div","style","TEXT_PROPS","font","Title","lookAt","textRef","name","depthTest","material-toneMapped","material-color","fontSize","TitleCopies","vertices","map","vertex","Mirror","sideMaterial","reflectionMaterial","material","Mirrors","envMap","useState","thinFilmFresnelMap","useResource","color","mirror","index","key","Content","sunPosition","turbidity","rayleigh","mieCoefficient","mieDirectionalG","texture","intensity","App","scrollArea","domContent","events","onScroll","e","target","scrollTop","camera","fov","fallback","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b319cb4f.chunk.js","sourcesContent":["/**\r\n * @classdesc\r\n * ThinFilmFresnelMap is a lookup texture containing the reflection colour. The texture index value\r\n * is dot(normal, view). The texture values are stored in approximated gamma space (power 2.0), so\r\n * the sampled value needs to be multiplied with itself before use. The sampled value should replace\r\n * the fresnel factor in a PBR material.\r\n *\r\n * @property filmThickness The thickness of the thin film layer in nanometers. Defaults to 380.\r\n * @property refractiveIndexFilm The refractive index of the thin film. Defaults to 2.\r\n * @property refractiveIndexBase The refractive index of the material under the film. Defaults to 3.\r\n *\r\n * @constructor\r\n * @param filmThickness The thickness of the thin film layer in nanometers. Defaults to 380.\r\n * @param refractiveIndexFilm The refractive index of the thin film. Defaults to 2.\r\n * @param refractiveIndexBase The refractive index of the material under the film. Defaults to 3.\r\n * @param size The width of the texture. Defaults to 64.\r\n *\r\n * @extends DataTexture\r\n *\r\n * @author David Lenaerts <http://www.derschmale.com>\r\n */\r\nimport * as THREE from 'three'\r\n\r\nexport function ThinFilmFresnelMap(filmThickness, refractiveIndexFilm, refractiveIndexBase, size) {\r\n  this._filmThickness = filmThickness || 500.0\r\n  this._refractiveIndexFilm = refractiveIndexFilm || 2\r\n  this._refractiveIndexBase = refractiveIndexBase || 3\r\n  this._size = size || 128\r\n  this._data = new Uint8Array(this._size * 4)\r\n\r\n  this._updateData()\r\n\r\n  THREE.DataTexture.call(\r\n    this,\r\n    this._data,\r\n    this._size,\r\n    1,\r\n    THREE.RGBAFormat,\r\n    THREE.UnsignedByteType,\r\n    THREE.UVMapping,\r\n    THREE.RepeatWrapping,\r\n    THREE.RepeatWrapping,\r\n    THREE.LinearFilter,\r\n    THREE.LinearMipMapLinearFilter\r\n  )\r\n  this.generateMipmaps = true\r\n  this.needsUpdate = true\r\n}\r\n\r\nThinFilmFresnelMap.prototype = Object.create(THREE.DataTexture.prototype, {\r\n  filmThickness: {\r\n    get: function () {\r\n      return this._filmThickness\r\n    },\r\n    set: function (value) {\r\n      this._filmThickness = value\r\n      this.updateSettings(this._filmThickness, this._refractiveIndexFilm, this._refractiveIndexBase)\r\n    }\r\n  },\r\n  refractiveIndexFilm: {\r\n    get: function () {\r\n      return this._refractiveIndexFilm\r\n    },\r\n    set: function (value) {\r\n      this._refractiveIndexFilm = value\r\n      this.updateSettings(this._filmThickness, this._refractiveIndexFilm, this._refractiveIndexBase)\r\n    }\r\n  },\r\n  refractiveIndexBase: {\r\n    get: function () {\r\n      return this._refractiveIndexBase\r\n    },\r\n    set: function (value) {\r\n      this._refractiveIndexBase = value\r\n      this.updateSettings(this._filmThickness, this._refractiveIndexFilm, this._refractiveIndexBase)\r\n    }\r\n  }\r\n})\r\n\r\n/**\r\n * Regenerates the lookup texture given new data.\r\n * @param filmThickness The thickness of the thin film layer in nanometers. Defaults to 380.\r\n * @param refractiveIndexFilm The refractive index of the thin film. Defaults to 2.\r\n * @param refractiveIndexBase The refractive index of the material under the film. Defaults to 3.\r\n */\r\nThinFilmFresnelMap.prototype.updateSettings = function (filmThickness, refractiveIndexFilm, refractiveIndexBase) {\r\n  this._filmThickness = filmThickness || 380\r\n  this._refractiveIndexFilm = refractiveIndexFilm || 2\r\n  this._refractiveIndexBase = refractiveIndexBase || 3\r\n  this._updateData()\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nThinFilmFresnelMap.prototype._fresnelRefl = function (refractiveIndex1, refractiveIndex2, cos1, cos2, R, phi) {\r\n  // r is amplitudinal, R is power\r\n  var sin1Sqr = 1.0 - cos1 * cos1 // = sin^2(incident)\r\n  var refrRatio = refractiveIndex1 / refractiveIndex2\r\n\r\n  if (refrRatio * refrRatio * sin1Sqr > 1.0) {\r\n    // total internal reflection\r\n    R.x = 1.0\r\n    R.y = 1.0\r\n\r\n    var sqrRefrRatio = refrRatio * refrRatio\r\n    // it looks like glsl's atan ranges are different from those in JS?\r\n    phi.x = 2.0 * Math.atan((-sqrRefrRatio * Math.sqrt(sin1Sqr - 1.0 / sqrRefrRatio)) / cos1)\r\n    phi.y = 2.0 * Math.atan(-Math.sqrt(sin1Sqr - 1.0 / sqrRefrRatio) / cos1)\r\n  } else {\r\n    var r_p = (refractiveIndex2 * cos1 - refractiveIndex1 * cos2) / (refractiveIndex2 * cos1 + refractiveIndex1 * cos2)\r\n    var r_s = (refractiveIndex1 * cos1 - refractiveIndex2 * cos2) / (refractiveIndex1 * cos1 + refractiveIndex2 * cos2)\r\n\r\n    phi.x = r_p < 0.0 ? Math.PI : 0.0\r\n    phi.y = r_s < 0.0 ? Math.PI : 0.0\r\n\r\n    R.x = r_p * r_p\r\n    R.y = r_s * r_s\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nThinFilmFresnelMap.prototype._updateData = function () {\r\n  var filmThickness = this._filmThickness\r\n  var refractiveIndexFilm = this._refractiveIndexFilm\r\n  var refractiveIndexBase = this._refractiveIndexBase\r\n  var size = this._size\r\n\r\n  // approximate CIE XYZ weighting functions from: http://jcgt.org/published/0002/02/01/paper.pdf\r\n  function xFit_1931(lambda) {\r\n    var t1 = (lambda - 442.0) * (lambda < 442.0 ? 0.0624 : 0.0374)\r\n    var t2 = (lambda - 599.8) * (lambda < 599.8 ? 0.0264 : 0.0323)\r\n    var t3 = (lambda - 501.1) * (lambda < 501.1 ? 0.049 : 0.0382)\r\n    return 0.362 * Math.exp(-0.5 * t1 * t1) + 1.056 * Math.exp(-0.5 * t2 * t2) - 0.065 * Math.exp(-0.5 * t3 * t3)\r\n  }\r\n\r\n  function yFit_1931(lambda) {\r\n    var t1 = (lambda - 568.8) * (lambda < 568.8 ? 0.0213 : 0.0247)\r\n    var t2 = (lambda - 530.9) * (lambda < 530.9 ? 0.0613 : 0.0322)\r\n    return 0.821 * Math.exp(-0.5 * t1 * t1) + 0.286 * Math.exp(-0.5 * t2 * t2)\r\n  }\r\n\r\n  function zFit_1931(lambda) {\r\n    var t1 = (lambda - 437.0) * (lambda < 437.0 ? 0.0845 : 0.0278)\r\n    var t2 = (lambda - 459.0) * (lambda < 459.0 ? 0.0385 : 0.0725)\r\n    return 1.217 * Math.exp(-0.5 * t1 * t1) + 0.681 * Math.exp(-0.5 * t2 * t2)\r\n  }\r\n\r\n  var data = this._data\r\n  var phi12 = new THREE.Vector2()\r\n  var phi21 = new THREE.Vector2()\r\n  var phi23 = new THREE.Vector2()\r\n  var R12 = new THREE.Vector2()\r\n  var T12 = new THREE.Vector2()\r\n  var R23 = new THREE.Vector2()\r\n  var R_bi = new THREE.Vector2()\r\n  var T_tot = new THREE.Vector2()\r\n  var R_star = new THREE.Vector2()\r\n  var R_bi_sqr = new THREE.Vector2()\r\n  var R_12_star = new THREE.Vector2()\r\n  var R_star_t_tot = new THREE.Vector2()\r\n\r\n  var refrRatioSqr = 1.0 / (refractiveIndexFilm * refractiveIndexFilm)\r\n  var refrRatioSqrBase = (refractiveIndexFilm * refractiveIndexFilm) / (refractiveIndexBase * refractiveIndexBase)\r\n\r\n  // RGB is too limiting, so we use the entire spectral domain, but using limited samples (64) to\r\n  // create more pleasing bands\r\n  var numBands = 64\r\n  var waveLenRange = 780 - 380 // the entire visible range\r\n\r\n  for (var i = 0; i < size; ++i) {\r\n    var cosThetaI = i / size\r\n    var cosThetaT = Math.sqrt(1 - refrRatioSqr * (1.0 - cosThetaI * cosThetaI))\r\n    var cosThetaT2 = Math.sqrt(1 - refrRatioSqrBase * (1.0 - cosThetaT * cosThetaT))\r\n\r\n    // this is essentially the extra distance traveled by a ray if it bounds through the film\r\n    var pathDiff = 2.0 * refractiveIndexFilm * filmThickness * cosThetaT\r\n    var pathDiff2PI = 2.0 * Math.PI * pathDiff\r\n\r\n    this._fresnelRefl(1.0, refractiveIndexFilm, cosThetaI, cosThetaT, R12, phi12)\r\n    T12.x = 1.0 - R12.x\r\n    T12.y = 1.0 - R12.y\r\n    phi21.x = Math.PI - phi12.x\r\n    phi21.y = Math.PI - phi12.y\r\n\r\n    // this concerns the base layer\r\n    this._fresnelRefl(refractiveIndexFilm, refractiveIndexBase, cosThetaT, cosThetaT2, R23, phi23)\r\n    R_bi.x = Math.sqrt(R23.x * R12.x)\r\n    R_bi.y = Math.sqrt(R23.y * R12.y)\r\n    T_tot.x = Math.sqrt(T12.x * T12.x)\r\n    T_tot.y = Math.sqrt(T12.y * T12.y)\r\n    R_star.x = (T12.x * T12.x * R23.x) / (1.0 - R23.x * R12.x)\r\n    R_star.y = (T12.y * T12.y * R23.y) / (1.0 - R23.y * R12.y)\r\n    R_bi_sqr.x = R_bi.x * R_bi.x\r\n    R_bi_sqr.y = R_bi.y * R_bi.y\r\n    R_12_star.x = R12.x + R_star.x\r\n    R_12_star.y = R12.y + R_star.y\r\n    R_star_t_tot.x = R_star.x - T_tot.x\r\n    R_star_t_tot.y = R_star.y - T_tot.y\r\n    var x = 0,\r\n      y = 0,\r\n      z = 0\r\n    var totX = 0,\r\n      totY = 0,\r\n      totZ = 0\r\n\r\n    // TODO: we could also put the thickness in the look-up table, make it a 2D table\r\n    for (var j = 0; j < numBands; ++j) {\r\n      var waveLen = 380 + (j / (numBands - 1)) * waveLenRange\r\n      var deltaPhase = pathDiff2PI / waveLen\r\n\r\n      var cosPhiX = Math.cos(deltaPhase + phi23.x + phi21.x)\r\n      var cosPhiY = Math.cos(deltaPhase + phi23.y + phi21.y)\r\n      var valX =\r\n        R_12_star.x +\r\n        ((2.0 * (R_bi.x * cosPhiX - R_bi_sqr.x)) / (1.0 - 2 * R_bi.x * cosPhiX + R_bi_sqr.x)) * R_star_t_tot.x\r\n      var valY =\r\n        R_12_star.y +\r\n        ((2.0 * (R_bi.y * cosPhiY - R_bi_sqr.y)) / (1.0 - 2 * R_bi.y * cosPhiY + R_bi_sqr.y)) * R_star_t_tot.y\r\n      var v = 0.5 * (valX + valY)\r\n\r\n      var wx = xFit_1931(waveLen)\r\n      var wy = yFit_1931(waveLen)\r\n      var wz = zFit_1931(waveLen)\r\n\r\n      totX += wx\r\n      totY += wy\r\n      totZ += wz\r\n\r\n      x += wx * v\r\n      y += wy * v\r\n      z += wz * v\r\n    }\r\n\r\n    x /= totX\r\n    y /= totY\r\n    z /= totZ\r\n\r\n    var r = 3.2406 * x - 1.5372 * y - 0.4986 * z\r\n    var g = -0.9689 * x + 1.8758 * y + 0.0415 * z\r\n    var b = 0.0557 * x - 0.204 * y + 1.057 * z\r\n\r\n    r = THREE.Math.clamp(r, 0.0, 1.0)\r\n    g = THREE.Math.clamp(g, 0.0, 1.0)\r\n    b = THREE.Math.clamp(b, 0.0, 1.0)\r\n\r\n    // linear to gamma\r\n    r = Math.sqrt(r)\r\n    g = Math.sqrt(g)\r\n    b = Math.sqrt(b)\r\n\r\n    // CIE XYZ to linear rgb conversion matrix:\r\n    // 3.2406 -1.5372 -0.4986\r\n    // -0.9689  1.8758  0.0415\r\n    // 0.0557 -0.2040  1.0570\r\n\r\n    var k = i << 2\r\n    data[k] = Math.floor(r * 0xff)\r\n    data[k + 1] = Math.floor(g * 0xff)\r\n    data[k + 2] = Math.floor(b * 0xff)\r\n    data[k + 3] = 0xff\r\n  }\r\n\r\n  this.needsUpdate = true\r\n}\r\n","import { useMemo, useRef } from 'react'\nimport * as THREE from 'three'\nimport { useFrame } from 'react-three-fiber'\n\nfunction useRenderTarget(settings = {}) {\n  const renderTarget = useMemo(() => {\n    const renderTargetSettings = {\n      format: THREE.RGBAFormat,\n      generateMipmaps: true\n    }\n\n    return new THREE.WebGLCubeRenderTarget(1024, {\n      ...renderTargetSettings,\n      ...settings\n    })\n  }, [settings])\n\n  const cubeCamera = useRef()\n\n  useFrame(({ gl, scene }) => {\n    if (!cubeCamera.current) return\n    cubeCamera.current.update(gl, scene)\n  })\n\n  return [cubeCamera, renderTarget]\n}\n\nexport default useRenderTarget\n","export const mirrorsData = {\r\n  mirrors: [\r\n    {\r\n      args: [2.87483173052424, 2.920755196190408, 0.05],\r\n      position: [3.116376203948097, -2.1742814140991196, -7.998859699752443],\r\n      rotation: [1.2536197471688286, -1.6683567077395978, -2.8428053193736256]\r\n    },\r\n    {\r\n      args: [1.799233278635274, 1.9642524560408021, 0.05],\r\n      position: [-3.325473394997085, 3.5307542721423446, -6.530151273151705],\r\n      rotation: [1.3951213133257899, -0.2888432911308304, 0.7178380971731012]\r\n    },\r\n    {\r\n      args: [2.8780801433198553, 2.9065216543855974, 0.05],\r\n      position: [1.2839348832937714, 2.888947614684322, -6.467835086028824],\r\n      rotation: [-1.3341775957580109, 2.8031736269533125, -0.18771283594857274]\r\n    },\r\n    {\r\n      args: [2.2175936863874006, 1.3820832190972703, 0.05],\r\n      position: [4.552400557892, 0.9814639517113943, -5.836395383986279],\r\n      rotation: [-2.3299625953354437, 0.6139693063561498, -0.3902201705507059]\r\n    },\r\n    {\r\n      args: [1.7446126775638997, 2.6211835436253392, 0.05],\r\n      position: [-2.826056860647832, -3.0308788716782042, -5.4685371584057485],\r\n      rotation: [-1.4052581815125295, 3.002812728418492, 2.54202362440499]\r\n    },\r\n    {\r\n      args: [1.139549518339333, 1.8007363020629232, 0.05],\r\n      position: [-0.041834072623521124, -1.351281881742426, -2.40411451302583],\r\n      rotation: [1.2848394396618561, -0.310029190116405, -2.107987000676972]\r\n    },\r\n    {\r\n      args: [2.2021865186914007, 2.610358395964105, 0.05],\r\n      position: [-4.1542927375782015, -0.349560252979882, -2.489538720961452],\r\n      rotation: [1.4401104979160235, 1.8179123712769852, -2.2157249608220475]\r\n    },\r\n    {\r\n      args: [2.0964670262303393, 1.5750930602784585, 0.05],\r\n      position: [6.571372497652996, -2.6457284555412066, -6.252562745592483],\r\n      rotation: [1.1870955922970219, 0.5335941225301444, 0.4523391139946649]\r\n    },\r\n    {\r\n      args: [1.3270056676441064, 1.5169873297208318, 0.05],\r\n      position: [3.6761316187794724, -4.141729519755186, -4.39063863430271],\r\n      rotation: [-0.7690386626408349, 1.4093151276977963, 2.0252977680762476]\r\n    },\r\n    {\r\n      args: [5.1426105440458216, 4.416201863189162, 0.05],\r\n      position: [0.646982562789564, 7.0909673302614196, -8.351518200349154],\r\n      rotation: [-0.0692356415822184, 1.918047448701773, 0.5268942683942657]\r\n    }\r\n  ]\r\n}\r\n\r\nexport const textData = [\r\n  {\r\n    position: [0, 0, -10],\r\n    rotation: [0, 0, 0],\r\n    scale: [1, 1, 1]\r\n  },\r\n  {\r\n    position: [0, 0, 10],\r\n    rotation: [0, 0, 0],\r\n    scale: [-1, 1, 1]\r\n  },\r\n  {\r\n    position: [-10, 0, 0],\r\n    rotation: [0, Math.PI / 2, 0],\r\n    scale: [1, 1, 1]\r\n  },\r\n  {\r\n    position: [10, 0, 0],\r\n    rotation: [0, -Math.PI / 2, 0],\r\n    scale: [-1, 1, 1]\r\n  },\r\n  {\r\n    position: [0, 10, 0],\r\n    rotation: [Math.PI / 2, 0, 0],\r\n    scale: [1, 1, 1]\r\n  },\r\n  {\r\n    position: [0, -10, 0],\r\n    rotation: [-Math.PI / 2, 0, 0],\r\n    scale: [-1, 1, 1]\r\n  }\r\n]\r\n","import { useEffect, useRef } from 'react'\n\nfunction useLayers(layers = [0]) {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current.layers.disableAll()\n\n    layers.sort().forEach((layer) => {\n      ref.current.layers.enable(layer)\n    })\n  })\n\n  return ref\n}\n\nexport default useLayers\n","import { createRef } from \"react\";\r\n\r\nconst state = {\r\n  sections: 4,\r\n  pages: 10,\r\n  zoom: 1,\r\n  top: createRef(),\r\n};\r\n\r\nexport default state;\r\n","import React, { createContext, useRef, useContext } from \"react\";\r\nimport { useFrame, useThree } from \"react-three-fiber\";\r\nimport state from \"./state\";\r\nimport lerp from \"lerp\"; //fix issue\r\n// const lerp = require('lerp');\r\n\r\nconst offsetContext = createContext(0);\r\n\r\nfunction Section({ children, offset, factor, ...props }) {\r\n  const { offset: parentOffset, sectionHeight, aspect } = useSection();\r\n  const ref = useRef();\r\n  offset = offset !== undefined ? offset : parentOffset;\r\n  useFrame(() => {\r\n    const curY = ref.current.position.y;\r\n    const curTop = state.top.current / aspect;\r\n    ref.current.position.y = lerp(curY, (curTop / state.zoom) * factor, 0.1);\r\n  });\r\n  return (\r\n    <offsetContext.Provider value={offset}>\r\n      <group {...props} position={[0, -sectionHeight * offset * factor, 0]}>\r\n        <group ref={ref}>{children}</group>\r\n      </group>\r\n    </offsetContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useSection() {\r\n  const { sections, pages, zoom } = state;\r\n  const { size, viewport } = useThree();\r\n  const offset = useContext(offsetContext);\r\n  const viewportWidth = viewport.width;\r\n  const viewportHeight = viewport.height;\r\n  const canvasWidth = viewportWidth / zoom;\r\n  const canvasHeight = viewportHeight / zoom;\r\n  const mobile = size.width < 700;\r\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1);\r\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6);\r\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1));\r\n  const aspect = size.height / viewportHeight;\r\n  return {\r\n    aspect,\r\n    viewport,\r\n    offset,\r\n    viewportWidth,\r\n    viewportHeight,\r\n    canvasWidth,\r\n    canvasHeight,\r\n    mobile,\r\n    margin,\r\n    contentMaxWidth,\r\n    sectionHeight,\r\n  };\r\n}\r\n\r\nexport { Section, useSection };\r\n","import { useMemo, useRef } from 'react'\nimport * as THREE from 'three'\nimport { useFrame, useThree } from 'react-three-fiber'\n\nfunction useSlerp() {\n  const group = useRef()\n  const { viewport } = useThree()\n\n  const [rotationEuler, rotationQuaternion] = useMemo(\n    () => [new THREE.Euler(0, 0, 0), new THREE.Quaternion(0, 0, 0, 0)],\n    []\n  )\n\n  useFrame(({ mouse }) => {\n    if (!group.current) return\n\n    const x = (mouse.x * viewport.width) / 100\n    const y = (mouse.y * viewport.height) / 100\n    rotationEuler.set(y, x, 0)\n    rotationQuaternion.setFromEuler(rotationEuler)\n    group.current.quaternion.slerp(rotationQuaternion, 0.1)\n  })\n\n  return group\n}\n\nexport default useSlerp\n","import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header>\r\n      <div className='header-inner'>\r\n        <div className='logo'>AR-V</div>\r\n        {/* <nav>\r\n          <ul>\r\n            <li>\r\n              <a href='/'>work</a>\r\n            </li>\r\n            <li>\r\n              <a href='/'>projects</a>\r\n            </li>\r\n            <li>\r\n              <a href='/'>discover</a>\r\n            </li>\r\n          </ul>\r\n        </nav> */}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React, { useEffect, useMemo, useState, useRef, Suspense } from \"react\";\r\nimport { Canvas, useFrame, useResource } from \"react-three-fiber\";\r\nimport { a, useTransition } from \"@react-spring/web\";\r\nimport { useProgress } from \"@react-three/drei\";\r\nimport { Text, Box } from \"@react-three/drei\";\r\nimport { Sky } from \"@react-three/drei\";\r\nimport * as THREE from \"three\";\r\nimport \"./App.scss\";\r\n\r\nimport { ThinFilmFresnelMap } from \"./components/ThinFilmFresnelMap\";\r\nimport useRenderTarget from \"./components/use-render-target\";\r\nimport { mirrorsData } from \"./components/data\";\r\nimport useLayers from \"./components/use-layers\";\r\nimport { Section } from \"./components/section\";\r\nimport useSlerp from \"./components/use-slerp\";\r\nimport Header from \"./components/header\";\r\nimport state from \"./components/state\";\r\n\r\n//Dev Tools\r\n// import { OrbitControls } from \"@react-three/drei\";\r\n// import { useMatcapTexture, Octahedron } from \"@react-three/drei\";\r\n\r\nfunction Loader() {\r\n  const { active, progress } = useProgress();\r\n  const transition = useTransition(active, {\r\n    from: { opacity: 1, progress: 0 },\r\n    leave: { opacity: 0 },\r\n    update: { progress },\r\n  });\r\n  return transition(\r\n    ({ progress, opacity }, active) =>\r\n      active && (\r\n        <a.div className='loading' style={{ opacity }}>\r\n          <div className='loading-bar-container'>\r\n            <a.div className='loading-bar' style={{ width: progress }}></a.div>\r\n          </div>\r\n        </a.div>\r\n      )\r\n  );\r\n}\r\n\r\nconst TEXT_PROPS = {\r\n  // fontSize: 1.25,\r\n  font:\r\n    \"https://fonts.gstatic.com/s/syncopate/v12/pe0pMIuPIYBCpEV5eFdKvtKqBP5p.woff\",\r\n};\r\n\r\nfunction Title({ layers, ...props }) {\r\n  const group = useRef();\r\n  useEffect(() => {\r\n    group.current.lookAt(0, 0, 0);\r\n  }, []);\r\n\r\n  const textRef = useLayers(layers);\r\n\r\n  return (\r\n    <group {...props} ref={group}>\r\n      <Text\r\n        ref={textRef}\r\n        name=\"title\"\r\n        depthTest={false}\r\n        material-toneMapped={false}\r\n        material-color=\"#FFFFFF\"\r\n        fontSize={1.25}\r\n        {...TEXT_PROPS}\r\n      >\r\n        Portfolio\r\n      </Text>\r\n    </group>\r\n  );\r\n}\r\n\r\nfunction TitleCopies({ layers }) {\r\n  const vertices = useMemo(() => {\r\n    const y = new THREE.IcosahedronGeometry(8);\r\n    return y.vertices;\r\n  }, []);\r\n\r\n  return (\r\n    <group name=\"titleCopies\">\r\n      {vertices.map((vertex, i) => (\r\n        <Title name={\"titleCopy-\" + i} position={vertex} layers={layers} />\r\n      ))}\r\n    </group>\r\n  );\r\n}\r\n\r\nfunction Mirror({ sideMaterial, reflectionMaterial, args, layers, ...props }) {\r\n  const ref = useLayers(layers);\r\n\r\n  useFrame(() => {\r\n    if (ref.current) {\r\n      ref.current.rotation.y += 0.001;\r\n      ref.current.rotation.z += 0.01;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Box\r\n      {...props}\r\n      ref={ref}\r\n      args={args}\r\n      material={[\r\n        sideMaterial,\r\n        sideMaterial,\r\n        sideMaterial,\r\n        sideMaterial,\r\n        reflectionMaterial,\r\n        reflectionMaterial,\r\n      ]}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Mirrors({ envMap, layers, ...props }) {\r\n  const [thinFilmFresnelMap] = useState(new ThinFilmFresnelMap());\r\n  const sideMaterial = useResource();\r\n  const reflectionMaterial = useResource();\r\n\r\n  return (\r\n    <group name=\"mirrors\" position={[0, 0, 0]} {...props}>\r\n      <meshLambertMaterial\r\n        ref={sideMaterial}\r\n        map={thinFilmFresnelMap}\r\n        color=\"#AAAAAA\"\r\n      />\r\n      <meshLambertMaterial\r\n        ref={reflectionMaterial}\r\n        map={thinFilmFresnelMap}\r\n        envMap={envMap}\r\n        color=\"#FFFFFF\"\r\n      />\r\n      {mirrorsData.mirrors.map((mirror, index) => (\r\n        <Mirror\r\n          key={`mirror-${index}`}\r\n          layers={layers}\r\n          {...mirror}\r\n          name={`mirror-${index}`}\r\n          sideMaterial={sideMaterial.current}\r\n          reflectionMaterial={reflectionMaterial.current}\r\n        />\r\n      ))}\r\n    </group>\r\n  );\r\n}\r\n\r\nfunction Content() {\r\n  const group = useSlerp();\r\n  const [cubeCamera, renderTarget] = useRenderTarget();\r\n\r\n  useFrame(({ gl, scene }) => {\r\n    cubeCamera.current.update(gl, scene);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Section factor={1.5} offset={0}>\r\n        <group position={[0, 0, 0]} ref={group}>\r\n          <Sky\r\n            layers={[11]}\r\n            sunPosition={[Math.PI, 0, Math.PI / 2]}\r\n            turbidity={8}\r\n            rayleigh={6}\r\n            mieCoefficient={0.0005}\r\n            mieDirectionalG={0.8}\r\n          />\r\n          <cubeCamera\r\n            layers={[11]}\r\n            name=\"cubeCamera\"\r\n            ref={cubeCamera}\r\n            position={[0, 0, 0]}\r\n            args={[0.1, 100, renderTarget]}\r\n          />\r\n          <Title name=\"title\" position={[0, 0, -10]} />\r\n          <TitleCopies layers={[11]} />\r\n          <Mirrors layers={[0, 11]} envMap={renderTarget.texture} />\r\n          <ambientLight intensity={0.4} />\r\n          {/* <OrbitControls /> */}\r\n        </group>\r\n      </Section>\r\n      <Section factor={1} offset={1}>\r\n        <group position={[0, 0, -10]}>\r\n          <group>\r\n            <Text\r\n              depthTest={false}\r\n              material-toneMapped={false}\r\n              material-color=\"#FFFFFF\"\r\n              fontSize={1}\r\n              {...TEXT_PROPS}\r\n            >\r\n              FRONT-END\r\n            </Text>\r\n          </group>\r\n          <group position={[0, -1, 0]}>\r\n            <Text\r\n              depthTest={false}\r\n              material-toneMapped={false}\r\n              material-color=\"#FFFFFF\"\r\n              fontSize={1}\r\n              {...TEXT_PROPS}\r\n            >\r\n              DEVELOPER\r\n            </Text>\r\n          </group>\r\n        </group>\r\n      </Section>\r\n      <Section factor={1} offset={2}>\r\n        <group position={[-1, 0, -10]}>\r\n          <Text\r\n            depthTest={false}\r\n            material-toneMapped={false}\r\n            material-color=\"#FFFFFF\"\r\n            fontSize={1}\r\n            {...TEXT_PROPS}\r\n          >\r\n            3D DEVELOPER\r\n          </Text>\r\n        </group>\r\n      </Section>\r\n      <Section factor={1} offset={3}>\r\n        <group position={[1, 0, -10]}>\r\n          <Text\r\n            depthTest={false}\r\n            material-toneMapped={false}\r\n            material-color=\"#FFFFFF\"\r\n            fontSize={1}\r\n            {...TEXT_PROPS}\r\n          >\r\n            AI DEVELOPER\r\n          </Text>\r\n        </group>\r\n      </Section>\r\n      {/* <Block factor={1.2} offset={5.7}> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const scrollArea = useRef();\r\n  const domContent = useRef();\r\n  const [events] = useState();\r\n  const onScroll = (e) => (state.top.current = e.target.scrollTop);\r\n  useEffect(() => void onScroll({ target: scrollArea.current }), []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Canvas camera={{ position: [0, 0, 5], fov: 70 }}>\r\n        {/* <Canvas concurrent shadowMap camera={{ position: [0, 0, 120], fov: 70 }}> */}\r\n        <Suspense fallback={null}>\r\n          <Content />\r\n        </Suspense>\r\n      </Canvas>\r\n      <Loader />\r\n      <div\r\n        className=\"scrollArea\"\r\n        ref={scrollArea}\r\n        onScroll={onScroll}\r\n        {...events}\r\n      >\r\n        <div style={{ position: \"sticky\", top: 0 }} ref={domContent} />\r\n        <div style={{ height: `${state.pages * 100}vh` }} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}